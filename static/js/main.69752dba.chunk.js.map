{"version":3,"sources":["components/Navbar.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","type","id","href","title","role","style","backgroundColor","color","onClick","togglemode","htmlFor","Form","countwords","data","count","ar","text","split","i","length","useState","setText","rows","value","onChange","event","target","placeholder","newtext","toUpperCase","showAlert","toLowerCase","replace","testStr","match","getvowelcount","App","setmode","setalert","message","msg","ty","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69752dba.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.title}</a>\r\n                            </li>\r\n\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">About</a>\r\n                            </li> */}\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Connect\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" style={{backgroundColor: props.mode === 'dark'?'#073642':'white'}}>\r\n                                    <li ><a className=\"dropdown-item\" href=\"https://github.com/Prash8830\" style={{backgroundColor: props.mode === 'dark'?'#073642':'white',color: props.mode === 'dark'?'lightgreen':'#212529'}}>Github</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"https://www.linkedin.com/in/prashant-patil-8830/\" style={{backgroundColor: props.mode === 'dark'?'#073642':'white',color: props.mode === 'dark'?'lightgreen':'#212529'}}>Linkedin</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"https://twitter.com/Prash8830\" style={{backgroundColor: props.mode === 'dark'?'#073642':'white',color: props.mode === 'dark'?'lightgreen':'#212529'}}>Twitter</a></li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n                            <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" id=\"km\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n// by this you can control value coming form props are valid or not\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string.isRequired,  //.isrequired makes necessary for prop input \r\n//     num: PropTypes.number,\r\n// }\r\n// Navbar.defaultProps = {\r\n//     title: 'Home',\r\n//     num: \"Set Number\" //you can give default value to other data types also\r\n// }","import React, { useState } from 'react'\r\n\r\nexport default function Form(props) {\r\n\r\n    const handleUpclick = () => {\r\n        // console.log('Uppercase was clicked'+ text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to uppercase\",\"Success!\");\r\n    }\r\n    const handleLoclick = () => {\r\n        // console.log('lowercase was clicked'+ text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to lowercase\",\"Success!\");\r\n\r\n    }\r\n    const handleClclick = () => {\r\n        // console.log('clear was clicked'+ text);\r\n        let newtext = \"\";\r\n        setText(newtext);\r\n        props.showAlert(\"Text is clear\",\"Warning!\");\r\n\r\n    }\r\n    const handleReclick = () => {\r\n        // console.log('Uppercase was clicked'+ text);\r\n        let newtext = text.replace(/[ ]+/g, \" \");\r\n        setText(newtext);\r\n        props.showAlert(\"Spaces are removed\",\"Success!\");\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log('On change');\r\n        setText(event.target.value);\r\n    }\r\n    function getvowelcount(data) {\r\n        var testStr = data.split(' ');\r\n        var vowelRegex = '^[aieouAIEOU].*';\r\n        let count = 0;\r\n        for(let i = 0; i < testStr.length; i++) {\r\n            var matched = testStr[i].match(vowelRegex);\r\n            if(matched) {count++;}\r\n        }\r\n        return count;\r\n    }\r\n    function countwords(data){\r\n        let count= 0;\r\n        let ar = text.split(\" \");\r\n        for (let i=0; i<ar.length; i++) {\r\n            if(ar[i]!==\"\")\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    \r\n\r\n    const [text, setText] = useState('your text goes here');\r\n    // setText(\"Prashant\");\r\n    return (\r\n        <>\r\n            <h1 id=\"txtx\" style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>Text Investigator For Everyone</h1>\r\n            <div className=\"container\" id=\"txtx\">\r\n                <label htmlFor=\"comment\" style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>Enter Text :</label>\r\n                <textarea  className=\"form-control\" style={{backgroundColor: props.mode === 'dark'?'#073642':'white',color: props.mode === 'dark'?'red':'#212529'}} rows=\"5\" id=\"comment\" value={text} onChange={handleOnChange} placeholder={text}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" id=\"txtxg\" onClick={handleUpclick}>To Upper Case</button>\r\n            <button className=\"btn btn-primary\" id=\"txtxg\" onClick={handleLoclick}>To Lower Case</button>\r\n            <button className=\"btn btn-primary\" id=\"txtxg\" onClick={handleClclick}>Clear</button>\r\n            <button className=\"btn btn-primary\" id=\"txtxg\" onClick={handleReclick}>Remove Space</button>\r\n            <div id=\"txtx\">\r\n                <h1 style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>Text Analysis :</h1>\r\n                <p style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>1) No. of Words : {countwords(text)}</p>\r\n                <p style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>2) No. of Characters : {text.length}</p>\r\n                <p style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>3) Time Required To Read to human: {text.length===0?0:0.008 * countwords(text)} minutes</p>\r\n                <p style={{color: props.mode === 'dark'?'lightgreen':'#212529'}}>4) No. of Words starting with Vowel: {getvowelcount(text)}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState } from 'react'\r\n\r\nimport Navbar from './components/Navbar'\r\n// import About from './components/About'\r\nimport Form from './components/Form'\r\n// import Alert from './components/Alert'\r\n\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState(\"light\");\r\n  const [alert, setalert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setalert({\r\n      msg: message,\r\n      ty: type\r\n    })\r\n    setTimeout(() => {\r\n      setalert(null);\r\n    }, 1500);\r\n  }\r\n  const togglemode = () => {\r\n    if (mode === 'light') {\r\n      setmode(\"dark\");\r\n      document.body.style.backgroundColor = '#073642';\r\n      // document.body.style.color='#lightgreen';\r\n      showAlert(\"Dark Mode is enabled\", \"Success !\");\r\n      document.title = \"Text Investigator.Dark Mode\";\r\n      // setInterval(()=>{\r\n      //  document.title=\"Nice\";\r\n      // },1500);\r\n      // setInterval(()=>{\r\n      //  document.title=\"Awesome\";\r\n      // },2000);\r\n    }\r\n    else {\r\n      setmode(\"light\");\r\n      document.body.style.backgroundColor = 'white';\r\n      // document.body.style.Color='black';\r\n      showAlert(\"Light Mode is enabled\", \"Success !\");\r\n      document.title = \"Text Investigator.Light Mode\";\r\n\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <Navbar title=\"Home\" mode={mode} togglemode={togglemode} />\r\n\r\n\r\n      <Form mode={mode} showAlert={showAlert} />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}